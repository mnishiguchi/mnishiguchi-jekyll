#!/usr/bin/env ruby
# frozen_string_literal: true

require 'rubygems'
require 'thor'
require 'pathname'
require 'fileutils'

class PurgeCss < Thor
  # https://github.com/erikhuda/thor/wiki/Making-An-Executable
  def self.exit_on_failure?
    true
  end

  # https://purgecss.com/configuration.html#options
  CONTENT_FILES = Dir.glob('_site/**/*.html')
  CSS_FILES = Dir.glob('_site/assets/main-bundle.css')
  OUTPUT_DIR = '_site/assets'

  # https://github.com/himanoa/touch_erb/pull/3/files
  default_task :purgecss

  desc 'purgecss', 'Remove unused CSS'
  def purgecss
    css_size_lookup = build_css_size_lookup
    print_config
    system("purgecss #{purgecss_option}")
    print_results(css_size_lookup)
  end

  private

  def print_results(css_size_lookup)
    CSS_FILES.each do |css_file|
      size_before = css_size_lookup[css_file]
      size_after = File.size(css_file)
      print_result(css_file, size_before, size_after)
    end
  end

  def print_config
    puts <<~LOG
      content: #{CONTENT_FILES.size.to_s.rjust(8, ' ')} files
      css:     #{CSS_FILES.size.to_s.rjust(8, ' ')} files
      output:  #{OUTPUT_DIR}
    LOG
  end

  def print_result(css_file, size_before, size_after)
    puts <<~LOG
      #{css_file}
        size_before: #{size_before.to_s.rjust(8, ' ')}
        size_after:  #{size_after.to_s.rjust(8, ' ')}
        diff:        #{(size_after - size_before).to_s.rjust(8, ' ')}
    LOG
  end

  def build_css_size_lookup
    CSS_FILES.each_with_object({}) do |css_file, lookup|
      lookup[css_file] = File.size(css_file)
    end
  end

  def purgecss_option
    "--css #{CSS_FILES.join(',')} "\
    "--content #{CONTENT_FILES.join(',')} "\
    "--output #{OUTPUT_DIR}"
  end
end

PurgeCss.start(ARGV)
